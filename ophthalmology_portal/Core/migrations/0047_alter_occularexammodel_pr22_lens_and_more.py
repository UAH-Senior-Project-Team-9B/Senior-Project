# Generated by Django 5.1.5 on 2025-04-13 06:33

import django.core.validators
import django_cryptography.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Core', '0046_alter_exammodel_status_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='occularexammodel',
            name='PR22_lens',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='PR 2.2 BIO Lens')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='advised',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='Patient Advised of effects of DFE')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='armd_segment',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255, verbose_name='ARMD Segment')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='contraindicated',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='DFE Contraindicated')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='d20_lens',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='20D BIO Lens')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='d78_lens',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='78D Lens')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='d90_lens',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='90D Lens')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='declined',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='DFE Declined')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='diabeti_eval_segment',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255, verbose_name='Diabeti Eval Segment')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='dilated_with_drops',
            field=django_cryptography.fields.encrypt(models.IntegerField(choices=[(1, '1 gtt'), (2, '2 gtt')])),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='dilated_with_drug',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('Atropine', 'Atropine'), ('Cyclopentolate', 'Cyclopentolate'), ('Dipivefrin', 'Dipivefrin'), ('Epinephrine', 'Epinephrine'), ('Hydroxyamphetamine', 'Hydroxyamphetamine'), ('Hyoscyamine', 'Hyoscyamine'), ('Ibopamine', 'Ibopamine'), ('Ketorolac', 'Ketorolac'), ('Oxyphenonium', 'Oxyphenonium'), ('Phenylephrine', 'Phenylephrine'), ('Racepinephrine', 'Racepinephrine'), ('Scopolamine', 'Scopolamine'), ('Tropicamide', 'Tropicamide'), ('Yohimbine', 'Yohimbine')], max_length=255)),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='fundus_record',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('Not Performed', 'Not Performed'), ('Small Pupil BIO', 'Small Pupil BIO'), ('Dilated Eval', 'Dilated Eval'), ('Undilated Eval', 'Undilated Eval'), ('Optomap Imaging', 'Optomap Imaging'), ('DFE with Optomap', 'DFE with Optomap')], max_length=255, verbose_name='Evaluation Performed')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='htn_eval_segment',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255, verbose_name='HTL Evaluation Segment')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='image_of_left_eye',
            field=django_cryptography.fields.encrypt(models.ImageField(upload_to='left_eye/')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='image_of_right_eye',
            field=django_cryptography.fields.encrypt(models.ImageField(upload_to='right_eye/')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='imaging',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='Fundus Imaging Performed')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='left_foveal_reflex',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('+', '+'), ('-', '-'), ('X', 'X')], max_length=1, verbose_name='OS Reflex')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='left_venous_pulsation',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('+', '+'), ('-', '-'), ('X', 'X')], max_length=1, verbose_name='OS Sponeaneous Venous Pulsation')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='macula_segment',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255, verbose_name='Macula Segment')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='misc_retina_segment',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255, verbose_name='Misc Retina Segment')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='nerve_fiber',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255, verbose_name='Nerve Fiber Layer')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='not_indicated',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='DFE Not Indicated')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_atrophy',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OD Peripap Atrophy')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_cup_ratio_horizontal',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='OD Cup-Disc Horizontal Ratio')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_cup_ratio_vertical',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='OD Cup-Disc Vertical Ratio')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_deep',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OD Deep/Lamina')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_muyelination',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OD Muyelination')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_oval',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OD Oval')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_pigment',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OD Pigment Crescent')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_pit',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OD Optic Pit')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_remnants',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OD Glial Remnants')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_round',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OD Round')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_scleral',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OD Scleral Crescent')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_shallow',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OD Shallow')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_temp',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OD Temp. sloping')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='od_under',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OD undermining')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='ophthalmoscope',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='Direct Opthalmoscope')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='optic_nerve',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255, verbose_name='Optic Nerve')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_atrophy',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OS Peripap Atrophy')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_cup_ratio_horizontal',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='OS Cup-Disc Horizontal Ratio')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_cup_ratio_vertical',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='OS Cup-Disc Vertical Ratio')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_deep',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OS Deep/Lamina')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_muyelination',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OS Muyelination')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_oval',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OS Oval')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_pigment',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OS Pigment Crescent')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_pit',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OS Optic Pit')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_remnants',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OS Glial Remnants')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_round',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OS Round')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_scleral',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OS Scleral Crescent')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_shallow',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OS Shallow')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_temp',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OS Temp. sloping')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='os_under',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='OS undermining')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='other',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='Other')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='other_information',
            field=django_cryptography.fields.encrypt(models.TextField(blank=True, max_length=255, null=True)),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='peripheral_retina_segment',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255, verbose_name='Peripheral Retina Segment')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='posterior_pole_segment',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255, verbose_name='Posterior Pole Segment')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='recent',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='Recent DFE')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='refused',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='DFE refused AME')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='rescheduled',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='DFE to be Rescheduled')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='right_foveal_reflex',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('+', '+'), ('-', '-'), ('X', 'X')], max_length=1, verbose_name='OD Reflex')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='right_venous_pulsation',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('+', '+'), ('-', '-'), ('X', 'X')], max_length=1, verbose_name='OD Venous Pulsation')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='scleral_depression',
            field=django_cryptography.fields.encrypt(models.BooleanField(verbose_name='Scleral Depression')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='vasculature_segment',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255, verbose_name='Vasculature Segment')),
        ),
        migrations.AlterField(
            model_name='occularexammodel',
            name='vitreous_segment',
            field=django_cryptography.fields.encrypt(models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255, verbose_name='Vitreous Segment')),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='od_add',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='od_axis',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='od_cylinder',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='od_prism',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='od_prism_base',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='od_sphere',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='od_visual_acuity_distance',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=255, null=True)),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='od_visual_acuity_near',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=255, null=True)),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='os_add',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='os_axis',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='os_cylinder',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='os_prism',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='os_prism_base',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='os_sphere',
            field=django_cryptography.fields.encrypt(models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='os_visual_acuity_distance',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=255, null=True)),
        ),
        migrations.AlterField(
            model_name='prescriptionmodel',
            name='os_visual_acuity_near',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=255, null=True)),
        ),
        migrations.AlterField(
            model_name='visualaccuitymodel',
            name='visual_acuity_measure_both',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, choices=[('20/10', '20/10'), ('20/12.5', '20/12.5'), ('20/16', '20/16'), ('20/20', '20/20'), ('20/25', '20/25'), ('20/32', '20/32'), ('20/40', '20/40'), ('20/50', '20/50'), ('20/63', '20/63'), ('20/80', '20/80'), ('20/100', '20/100'), ('20/125', '20/125'), ('20/160', '20/160'), ('20/200', '20/200')], max_length=255, null=True, verbose_name='OU Visual Accuity')),
        ),
        migrations.AlterField(
            model_name='visualaccuitymodel',
            name='visual_acuity_measure_left',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, choices=[('20/10', '20/10'), ('20/12.5', '20/12.5'), ('20/16', '20/16'), ('20/20', '20/20'), ('20/25', '20/25'), ('20/32', '20/32'), ('20/40', '20/40'), ('20/50', '20/50'), ('20/63', '20/63'), ('20/80', '20/80'), ('20/100', '20/100'), ('20/125', '20/125'), ('20/160', '20/160'), ('20/200', '20/200')], max_length=255, null=True, verbose_name='OS Visual Accuity')),
        ),
        migrations.AlterField(
            model_name='visualaccuitymodel',
            name='visual_acuity_measure_right',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, choices=[('20/10', '20/10'), ('20/12.5', '20/12.5'), ('20/16', '20/16'), ('20/20', '20/20'), ('20/25', '20/25'), ('20/32', '20/32'), ('20/40', '20/40'), ('20/50', '20/50'), ('20/63', '20/63'), ('20/80', '20/80'), ('20/100', '20/100'), ('20/125', '20/125'), ('20/160', '20/160'), ('20/200', '20/200')], max_length=255, null=True, verbose_name='OD Measurement')),
        ),
    ]
