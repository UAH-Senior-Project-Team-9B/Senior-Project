# Generated by Django 5.1.5 on 2025-03-11 04:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OccularExamModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Vitreous Segment', models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255)),
                ('Macula Segment', models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255)),
                ('Vasculature Segment', models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255)),
                ('Posterior Pole Segment', models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255)),
                ('Peripheral Retina Segment', models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255)),
                ('Misc Retina Segment', models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255)),
                ('Diabeti Eval Segment', models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255)),
                ('HTL Evaluation Segment', models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255)),
                ('ARMD Segment', models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255)),
                ('OS Sponeaneous Venous Pulsation', models.CharField(choices=[('+', '+'), ('-', '-'), ('X', 'X')], max_length=1)),
                ('OS Reflex', models.CharField(choices=[('+', '+'), ('-', '-'), ('X', 'X')], max_length=1)),
                ('OD Reflex', models.CharField(choices=[('+', '+'), ('-', '-'), ('X', 'X')], max_length=1)),
                ('Evaluation Performed', models.CharField(choices=[('Not Performed', 'Not Performed'), ('Small Pupil BIO', 'Small Pupil BIO'), ('Dilated Eval', 'Dilated Eval'), ('Undilated Eval', 'Undilated Eval'), ('Optomap Imaging', 'Optomap Imaging'), ('DFE with Optomap', 'DFE with Optomap')], max_length=255)),
                ('dilated_with_drops', models.IntegerField(choices=[(1, '1 gtt'), (2, '2 gtt')])),
                ('dilated_with_drug', models.CharField(choices=[('Atropine', 'Atropine'), ('Cyclopentolate', 'Cyclopentolate'), ('Dipivefrin', 'Dipivefrin'), ('Epinephrine', 'Epinephrine'), ('Hydroxyamphetamine', 'Hydroxyamphetamine'), ('Hyoscyamine', 'Hyoscyamine'), ('Ibopamine', 'Ibopamine'), ('Ketorolac', 'Ketorolac'), ('Oxyphenonium', 'Oxyphenonium'), ('Phenylephrine', 'Phenylephrine'), ('Racepinephrine', 'Racepinephrine'), ('Scopolamine', 'Scopolamine'), ('Tropicamide', 'Tropicamide'), ('Yohimbine', 'Yohimbine')], max_length=255)),
                ('78D Lens', models.BooleanField()),
                ('90D Lens', models.BooleanField()),
                ('20D BIO Lens', models.BooleanField()),
                ('PR 2.2 BIO Lens', models.BooleanField()),
                ('Scleral Depression', models.BooleanField()),
                ('Direct Opthalmoscope', models.BooleanField()),
                ('Other', models.BooleanField()),
                ('other_information', models.TextField(max_length=255)),
                ('Patient Advised of effects of DFE', models.BooleanField()),
                ('DFE to be Rescheduled', models.BooleanField()),
                ('DFE Declined', models.BooleanField()),
                ('Fundus Imaging Performed', models.BooleanField()),
                ('DFE refused AME', models.BooleanField()),
                ('DFE Not Indicated', models.BooleanField()),
                ('DFE Contraindicated', models.BooleanField()),
                ('Recent DFE', models.BooleanField()),
                ('OD Cup-Disc Horizontal Ratio', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('OD Cup-Disc Vertical Ratio', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('OS Cup-Disc Horizontal Ratio', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('OS Cup-Disc Vertical Ratio', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('Optic Nerve', models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255)),
                ('Nerve Fiber Layer', models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('HIGH', 'HIGH'), ('NORM', 'NORM'), ('LOW', 'LOW'), ('NOT CHECKED', 'NOT CHECKED')], max_length=255)),
                ('OD Deep/Lamina', models.BooleanField()),
                ('OD Shallow', models.BooleanField()),
                ('OD Round', models.BooleanField()),
                ('OD Oval', models.BooleanField()),
                ('OD Temp. sloping', models.BooleanField()),
                ('OD undermining', models.BooleanField()),
                ('OD Peripap Atrophy', models.BooleanField()),
                ('OD Scleral Crescent', models.BooleanField()),
                ('OD Pigment Crescent', models.BooleanField()),
                ('OD Optic Pit', models.BooleanField()),
                ('OD Muyelination', models.BooleanField()),
                ('OD Glial Remnants', models.BooleanField()),
                ('OS Deep/Lamina', models.BooleanField()),
                ('OS Shallow', models.BooleanField()),
                ('OS Round', models.BooleanField()),
                ('OS Oval', models.BooleanField()),
                ('OS Temp. sloping', models.BooleanField()),
                ('OS undermining', models.BooleanField()),
                ('OS Peripap Atrophy', models.BooleanField()),
                ('OS Scleral Crescent', models.BooleanField()),
                ('OS Pigment Crescent', models.BooleanField()),
                ('OS Optic Pit', models.BooleanField()),
                ('OS Muyelination', models.BooleanField()),
                ('OS Glial Remnants', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ManagerUserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OphthalmologistUserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatientUserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('Dr.', 'Dr.'), ('Mr.', 'Mr.'), ('Mrs.', 'Mrs.'), ('Ms.', 'Ms.')], max_length=5)),
                ('first_name', models.CharField(max_length=30)),
                ('middle_initial', models.CharField(blank=True, max_length=1)),
                ('last_name', models.CharField(max_length=30)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('street_address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=20)),
                ('zip_code', models.CharField(max_length=10)),
                ('phone_number', models.CharField(max_length=15)),
                ('emergency_contact', models.CharField(max_length=100)),
                ('social_security_number', models.CharField(max_length=11, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_prescribed', models.DateField(auto_now_add=True)),
                ('od_sphere', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('od_cylinder', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('od_axis', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('od_add', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('od_prism', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('od_prism_base', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('os_sphere', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('os_cylinder', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('os_axis', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('os_add', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('os_prism', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('os_prism_base', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('visual_acuity', models.DecimalField(choices=[(10, '20/10'), (12.5, '20/12.5'), (16, '20/16'), (20, '20/20'), (25, '20/25'), (32, '20/32'), (40, '20/40'), (50, '20/50'), (63, '20/63'), (80, '20/80'), (100, '20/100'), (125, '20/125'), (160, '20/160'), (200, '20/200')], decimal_places=1, max_digits=4)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.patientusermodel')),
                ('prescriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.ophthalmologistusermodel')),
            ],
        ),
        migrations.CreateModel(
            name='VisualAccuityModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.CharField(choices=[('D', 'D'), ('N', 'N')], max_length=255)),
                ('OS Visual Accuity', models.DecimalField(choices=[(10, '20/10'), (12.5, '20/12.5'), (16, '20/16'), (20, '20/20'), (25, '20/25'), (32, '20/32'), (40, '20/40'), (50, '20/50'), (63, '20/63'), (80, '20/80'), (100, '20/100'), (125, '20/125'), (160, '20/160'), (200, '20/200')], decimal_places=1, max_digits=2)),
                ('Corrector Indicator', models.CharField(choices=[('cc', 'cc (with)'), ('sc', 'sc (without)')], max_length=255)),
                ('OS Pinhole Occluder', models.BooleanField()),
                ('Right Eye Measurement', models.DecimalField(choices=[(10, '20/10'), (12.5, '20/12.5'), (16, '20/16'), (20, '20/20'), (25, '20/25'), (32, '20/32'), (40, '20/40'), (50, '20/50'), (63, '20/63'), (80, '20/80'), (100, '20/100'), (125, '20/125'), (160, '20/160'), (200, '20/200')], decimal_places=1, max_digits=2)),
                ('OD Corrector Indicator', models.CharField(choices=[('cc', 'cc (with)'), ('sc', 'sc (without)')], max_length=255)),
                ('OD Pinhole Occluder', models.BooleanField()),
                ('OU Visual Accuity', models.DecimalField(choices=[(10, '20/10'), (12.5, '20/12.5'), (16, '20/16'), (20, '20/20'), (25, '20/25'), (32, '20/32'), (40, '20/40'), (50, '20/50'), (63, '20/63'), (80, '20/80'), (100, '20/100'), (125, '20/125'), (160, '20/160'), (200, '20/200')], decimal_places=1, max_digits=2)),
                ('OU Corrector Indicator', models.CharField(choices=[('cc', 'cc (with)'), ('sc', 'sc (without)')], max_length=255)),
                ('OU Pinhole Occluder', models.BooleanField()),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.prescriptionmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ExamModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('occular_exam_information', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='Core.occularexammodel')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.ophthalmologistusermodel')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.patientusermodel')),
                ('prescription', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='Core.prescriptionmodel')),
                ('visual_accuity_information', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='Core.visualaccuitymodel')),
            ],
        ),
    ]
